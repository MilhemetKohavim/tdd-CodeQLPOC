<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <Nullable>enable</Nullable>
        <ImplicitUsings>enable</ImplicitUsings>
    </PropertyGroup>

    <ItemGroup>
        <None Update="xunit.runner.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\..\src\TDDSample.Api\TDDSample.Api.csproj" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="AutoBogus" />
        <PackageReference Include="coverlet.collector">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="coverlet.msbuild">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="FluentAssertions" />
        <PackageReference Include="FluentAssertions.Web" />
        <PackageReference Include="Microsoft.AspNetCore.Mvc.Testing" />
        <PackageReference Include="Microsoft.NET.Test.Sdk" />
        <PackageReference Include="Microsoft.VisualStudio.TestPlatform" />
        <PackageReference Include="NSubstitute" />
        <PackageReference Include="ReportGenerator" />
        <PackageReference Include="RichardSzalay.MockHttp" />
        <PackageReference Include="xunit" />
        <PackageReference Include="xunit.runner.visualstudio">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
    </ItemGroup>

<!--    https://github.com/coverlet-coverage/coverlet/blob/master/Documentation/MSBuildIntegration.md#coverage-output-->
    
    <PropertyGroup>
        <CollectCoverage>true</CollectCoverage>
        <CoverletOutputFormat>lcov</CoverletOutputFormat>
        <CoverletOutput>./test-results/lcov.info</CoverletOutput>
    </PropertyGroup>

    <Target Name="GenerateHtmlCoverageReport" AfterTargets="GenerateCoverageResultAfterTest">
        <ReportGenerator ReportFiles="@(CoverletReport)" TargetDirectory="./html-coverage-report/" />
    </Target>

</Project>
